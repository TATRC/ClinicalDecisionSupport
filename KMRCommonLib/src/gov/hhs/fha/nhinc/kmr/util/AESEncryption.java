package gov.hhs.fha.nhinc.kmr.util;

import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.*;
import javax.crypto.spec.*;
import javax.xml.bind.DatatypeConverter;

/**
 * This class provides an AES encryption. The aesEncrypt method takes a String
 * and returns a byte array of the AES encrypted value of the String. The
 * aesDecrypt method takes a byte array as input and decrypts that byte array
 * then returns the original String.
 * 
 */
public class AESEncryption {

    Logger logger = Logger.getLogger("gov.hhs.fha.nhinc.kmr.util.AESEncryption");

    /**
     * Turns bytes of bytes into hex string
     *
     * @param bytes	Array of bytes to convert to hex string
     * @return	Generated hex string
     */    
    public static String toHexString(byte[] bytes) {
        return DatatypeConverter.printHexBinary(bytes);
    }

    /**
     * Turns hex string into array of bytes
     *
     * @param s	hex string to be converted
     * @return	Generated byte array
     */
    public static byte[] toByteArray(String s) {
        return DatatypeConverter.parseHexBinary(s);
    }


    /**
     * Encrypts the input string using the AES algorithm. The key is obtained
     * from the persistent Java keystore.
     *
     * @param the string to encrypt
     * 
     * @return byte array containing the encrypted string
     *
     * @throws IOException
     * @throws GeneralSecurityException
     *
     */
    public byte[] aesEncrypt(String toEncrypt) throws IOException, GeneralSecurityException {
        SecretKeySpec skeySpec = getKeySpec();
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, skeySpec);
        byte[] toEncryptBytes = toEncrypt.getBytes("UTF-8");
        byte[] encrypted = cipher.doFinal(toEncryptBytes);
        logger.log(Level.INFO, "aesEncrypt - encrypted string: " + encrypted);
        return encrypted;
    }

    /**
     * Decrypts the input byte array using the AES algorithm. The key is obtained
     * from the persistent Java keystore.
     *
     * @param the byte array to decreypt
     *
     * @return the decrypted original string 
     *
     * @throws IOException
     * @throws GeneralSecurityException
     *
     */
    public String aesDecrypt(byte[] toDecrypt) throws IOException, GeneralSecurityException {
        SecretKeySpec skeySpec = getKeySpec();
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, skeySpec, cipher.getParameters());
        byte[] original = cipher.doFinal(toDecrypt);
        String decrypted = new String(original, "UTF-8");
        logger.log(Level.INFO, "aesDecrypt - decrypted string: " + decrypted);
        return new String(original, "UTF-8");
    }

    /**
     * Retrieves and loads the key spec used for encryption and decryption from the
     * Java keystore using the KMRKeyStore class.
     *
     * @return the SecretKeySpec from KMRKeyStore
     *
     * @throws IOException
     * @throws GeneralSecurityException
     *
     */
    private SecretKeySpec getKeySpec() throws GeneralSecurityException, IOException {
        KMRKeyStore kmrKeyStore = new KMRKeyStore();
        kmrKeyStore.loadKey();
        return kmrKeyStore.getKeySpec();
    }
}
